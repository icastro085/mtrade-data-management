# CATEGORY
type Category {
  _id: ID
  name: String!
  parent: Category
  children: [Category!]
  products: [Product!]
}

input CategoryInput {
  name: String!
  parent: CategoryParentInput
}

input CategoryParentInput {
  _id: ID!
  name: String
}

input ProductCategoriesInput {
  _id: ID!
}

# PRODUCT
type Product {
  _id: ID
  name: String!
  description: String
  price: Float
  priceOld: Float
  categories: [Category!]
  info: [ProductInfo!]
  images: [ProductImage!]
}

type ProductInfo {
  label: String!
  value: String!
}

type ProductImage {
  name: String
  source: String
}

input ProductInput {
  name: String!
  description: String
  price: Float
  priceOld: Float
  categories: [ProductCategoriesInput!]
  info: [ProductInfoInput!]
  images: [ProductImageInput!]
}

input ProductInfoInput {
  label: String!
  value: String!
}

input ProductImageInput {
  name: String
  source: String
}

type DeleteResult {
  ok: Int!
  deletedCount: Int!
}

# QUERY
type Query {
  getCategoryById(id: ID!): Category
  getCategories(name: String, limit: Int!, page: Int = 0): [Category]
  getCategoriesTotal(name: String): Int!

  getProductById(id: ID!): Product
  getProducts(
    name: String,
    description: String,
    limit: Int!,
    page: Int = 0
  ): [Product]
  getProductsTotal(
    name: String,
    description: String
  ): Int!
}

# MUTATION
type Mutation {
  addCategory(category: CategoryInput): Category
  updateCategory(id: ID!, category: CategoryInput): Category
  deleteCategory(id: ID!): DeleteResult!

  addProduct(product: ProductInput): Product
  updateProduct(id: ID!, product: ProductInput): Product
  deleteProduct(id: ID!): DeleteResult!
}
